name: 'Terragrunt GitHub Actions for base-app'

on:
  push:
    branches: [ "iac*" ]

env:
  AWS_REGION: ca-central-1 
  ASSUME_ROLE: arn:aws:iam::516193157210:role/base-app-role
  TFC_API_TOKEN: ${{ secrets.TFC_API_TOKEN }}
  TFC_HOSTNAME: "app.terraform.io" 
  TF_INPUT: false

permissions:
  id-token: write
  contents: read

jobs:
  terragrunt:
    name: 'Deploy infra with Terragrunt'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ env.ASSUME_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Install Terragrunt
        uses: autero1/action-terragrunt@v1.2.0
        with:
          terragrunt_version: latest

      - name: Add the TFC token
        run: |
            cat > ${HOME}/.terraformrc << EOF
            credentials "${TFC_HOSTNAME}" {
              token = "${TFC_API_TOKEN}"
            }
            EOF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terragrunt Validate'
        run: cd ./deploy-app-aws-ecs/iac && terragrunt run-all validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terragrunt Plan'
        run: cd ./deploy-app-aws-ecs/iac && terragrunt run-all plan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terragrunt Apply'
        run: cd ./deploy-app-aws-ecs/iac && terragrunt run-all apply
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}